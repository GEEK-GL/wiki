(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{380:function(e,t,a){e.exports=a.p+"assets/img/01.bba2722d.png"},381:function(e,t,a){e.exports=a.p+"assets/img/03.6b507f0e.png"},382:function(e,t,a){e.exports=a.p+"assets/img/02.421b140d.png"},423:function(e,t,a){"use strict";a.r(t);var s=a(45),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"become-a-validator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#become-a-validator"}},[e._v("#")]),e._v(" Become a Validator")]),e._v(" "),s("p",[e._v("Running a validator on a live network is a lot of responsibility! You will be accountable for not only your own stake, but also the stake of your current nominators. If you make a mistake and get slashed, your money and your reputation will be at risk. However, running a validator can also be very rewarding, knowing that you contribute to the security of a decentralized network while growing your stash.")]),e._v(" "),s("div",{staticClass:"warning custom-block"},[s("h3",[e._v("Warning")]),e._v(" "),s("p",[e._v("It is highly recommended that you have significant system administration experience before attempting to run your own validator.")])]),e._v(" "),s("h3",{attrs:{id:"login-to-your-vps-download-the-install-sh-file-and-then-run-it"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#login-to-your-vps-download-the-install-sh-file-and-then-run-it"}},[e._v("#")]),e._v(" Login to your VPS, download the "),s("code",[e._v("install.sh")]),e._v(" file and then run it:")]),e._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",[e._v("Bash installer for GEEK Validator on Ubuntu 18.04 LTS x64 and Ubuntu 20.04 LTS x64")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("wget https://raw.githubusercontent.com/GeekCash/validator/master/install.sh\nchmod +x ./install.sh\nsudo bash ./install.sh\n")])])]),s("p",[e._v("You can tail the logs with "),s("code",[e._v("journalctl")]),e._v(" like so:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("sudo journalctl -f -u geek\n")])])]),s("h3",{attrs:{id:"setup-validator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setup-validator"}},[e._v("#")]),e._v(" Setup validator")]),e._v(" "),s("p",[e._v("To start, we will use the following terminology of keys for the guide:")]),e._v(" "),s("p",[s("code",[e._v("stash")]),e._v(" - the stash keypair is where most of your funds should be located. It can be kept in cold storage if necessary.")]),e._v(" "),s("p",[s("code",[e._v("controller")]),e._v(" - the controller is the keypair that will control your validator settings. It should have a smaller balance, e.g. 10-100 GEEK")]),e._v(" "),s("p",[s("code",[e._v("session")]),e._v(" - the 4 session keypairs are hot keys that are stored on your validator node. They do not need to have balances.")]),e._v(" "),s("h3",{attrs:{id:"generate-a-keypair"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generate-a-keypair"}},[e._v("#")]),e._v(" Generate a keypair")]),e._v(" "),s("p",[e._v("The requires validators to manage 4 validating keys for the Babe, Grandpa, ImOnline, and AuthorityDiscovery modules.")]),e._v(" "),s("p",[e._v("This is useful if our authoring keys have been generated via keypair tool. Note that the GRANDPA keys are "),s("strong",[e._v("ed25519")]),e._v(", while the rest are "),s("strong",[e._v("sr25519")]),e._v(".")]),e._v(" "),s("ul",[s("li",[e._v("Grandpa keys ("),s("strong",[e._v("ed25519")]),e._v(")")]),e._v(" "),s("li",[e._v("Babe keys (sr25519)")]),e._v(" "),s("li",[e._v("ImOnline keys (sr25519)")]),e._v(" "),s("li",[e._v("AuthorityDiscovery keys (sr25519)")])]),e._v(" "),s("p",[e._v("Create GRANDPA key are "),s("strong",[e._v("ed25519")]),e._v(" with command: "),s("code",[e._v("geek key generate --network geek --scheme ed25519")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("geek key generate --network geek --scheme ed25519\nSecret phrase `wear praise basket blur mammal arrest winner pistol road civil fold harvest` is account:\n  Secret seed:      0xabdee92059f2992da6cd702519c9ca569bcf7714a9bcc43b7c40e66dad23eefe\n  Public key (hex): 0x8e7ba9270ef833229842f24a28c00c6ebe419b21eb57993aa6eda0d743c04c8a\n  Account ID:       0x8e7ba9270ef833229842f24a28c00c6ebe419b21eb57993aa6eda0d743c04c8a\n  SS58 Address:     2xBMSrVimvEWs8mRqfm5aQQLaErG6QkssfwWNjWVsvZRm3xp\n")])])]),s("p",[e._v("Create the remaining keys which are "),s("strong",[e._v("sr25519")]),e._v(" from the seed above:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('export SEED="wear praise basket blur mammal arrest winner pistol road civil fold harvest";\nfor key in babe imonline authority; do geek key inspect-key --network geek "$SEED//$key"; done;\n')])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Secret Key URI `wear praise basket blur mammal arrest winner pistol road civil fold harvest//babe` is account:\n  Secret seed:      0x5a0b3968e097579ee7fd81ea2c85be841b4e0ca9e6fe520878176b614dc9417e\n  Public key (hex): 0xf2143d2b55a72d287115ef481df4d5b32c122df49bf1d0172cd74b7c0a61743e\n  Account ID:       0xf2143d2b55a72d287115ef481df4d5b32c122df49bf1d0172cd74b7c0a61743e\n  SS58 Address:     2zRwWfmLy4G11dGxZZtmybc1o2kj9bB61Yf64pC4JdeCZnNp\n\nSecret Key URI `wear praise basket blur mammal arrest winner pistol road civil fold harvest//imonline` is account:\n  Secret seed:      0xb37a6f806f862fe1de68690790377c9e16dcbd264113e2578e96008f7c1fa998\n  Public key (hex): 0x1eded8af004698254ea84b66d479ed3440e56e5530a20bb302f4b9f944f0147f\n  Account ID:       0x1eded8af004698254ea84b66d479ed3440e56e5530a20bb302f4b9f944f0147f\n  SS58 Address:     2uf1YiyBwFfWYdrZGBzzC3m69QbyWchuSR6wKpAEZwd4Xz9V\n\nSecret Key URI `wear praise basket blur mammal arrest winner pistol road civil fold harvest//authority` is account:\n  Secret seed:      0x125e249db1167bd58dd45faf03dbda95997128045fc9391895a876c3e654b758\n  Public key (hex): 0x52ce0fe56d981be9c6364416246cf22c5d5e77bdfc07618ac0bfba86e713a34c\n  Account ID:       0x52ce0fe56d981be9c6364416246cf22c5d5e77bdfc07618ac0bfba86e713a34c\n  SS58 Address:     2vq73xVESqbK1pkD4kU8TK94mRf66GgasGzE9DykJdAvdKGQ\n")])])]),s("h3",{attrs:{id:"inserting-authoring-keys"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inserting-authoring-keys"}},[e._v("#")]),e._v(" Inserting authoring keys")]),e._v(" "),s("p",[e._v("We can then submit the seed+key derivation paths (suri) and the corresponding AccountIdâ€™s for BABE, GRANDPA, ImOnline and AuthorityDiscovery keys via RPC:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('curl -H \'Content-Type: application/json\' --data \'{ "jsonrpc":"2.0", "method":"author_insertKey", "params":["KEY_TYPE", "SEED", "PUBKEY_HEX"],"id":1 }\' localhost:9933\n')])])]),s("p",[e._v("The four key types you will enter individuals are:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("babe")]),e._v(" for Babe keys")]),e._v(" "),s("li",[s("code",[e._v("gran")]),e._v(" for Grandpa keys")]),e._v(" "),s("li",[s("code",[e._v("imon")]),e._v(" for ImOnline keys")]),e._v(" "),s("li",[s("code",[e._v("audi")]),e._v(" for AuthorityDiscovery keys")])]),e._v(" "),s("p",[s("strong",[e._v("Grandpa:")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('curl -H \'Content-Type: application/json\' --data \'{ "jsonrpc":"2.0", "method":"author_insertKey", "params":["gran", "wear praise basket blur mammal arrest winner pistol road civil fold harvest", "0x8e7ba9270ef833229842f24a28c00c6ebe419b21eb57993aa6eda0d743c04c8a"],"id":1 }\' localhost:9933\n')])])]),s("p",[s("strong",[e._v("Babe:")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('curl -H \'Content-Type: application/json\' --data \'{ "jsonrpc":"2.0", "method":"author_insertKey", "params":["babe", "wear praise basket blur mammal arrest winner pistol road civil fold harvest//babe", "0xf2143d2b55a72d287115ef481df4d5b32c122df49bf1d0172cd74b7c0a61743e"],"id":1 }\' localhost:9933\n')])])]),s("p",[s("strong",[e._v("ImOnline:")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('curl -H \'Content-Type: application/json\' --data \'{ "jsonrpc":"2.0", "method":"author_insertKey", "params":["imon", "wear praise basket blur mammal arrest winner pistol road civil fold harvest//imonline", "0x1eded8af004698254ea84b66d479ed3440e56e5530a20bb302f4b9f944f0147f"],"id":1 }\' localhost:9933\n')])])]),s("p",[s("strong",[e._v("AuthorityDiscovery:")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('curl -H \'Content-Type: application/json\' --data \'{ "jsonrpc":"2.0", "method":"author_insertKey", "params":["audi", "wear praise basket blur mammal arrest winner pistol road civil fold harvest//authority", "0x52ce0fe56d981be9c6364416246cf22c5d5e77bdfc07618ac0bfba86e713a34c"],"id":1 }\' localhost:9933\n')])])]),s("div",{staticClass:"warning custom-block"},[s("p",[e._v("Validators should not share the same keys, even for learning purposes. If two validators have the same keys, they will produce conflicting blocks.")])]),e._v(" "),s("p",[e._v("After running these curl commands, you should receive as output from stdout the public keys you provided (or didn't) in a JSON string. That also means the "),s("strong",[e._v("process was a success")]),e._v("!")]),e._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",[e._v("The validator node will need to be restarted after setting or changing GRANDPA keys.")])]),e._v(" "),s("p",[e._v("Restart the validator node with the following command:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("sudo service geek restart\n")])])]),s("h3",{attrs:{id:"bonding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bonding"}},[e._v("#")]),e._v(" Bonding")]),e._v(" "),s("p",[e._v("It is highly recommended that you make your controller and stash accounts be two separate accounts. For this, you will create two accounts and make sure each of them have at least enough funds to pay the fees for making transactions. Keep most of your funds in the stash account since it is meant to be the custodian of your staking funds.")]),e._v(" "),s("p",[e._v("Make sure not to bond all your GEEK balance since you will be unable to pay transaction fees from your bonded balance.")]),e._v(" "),s("p",[e._v("It is now time to set up our validator. We will do the following:")]),e._v(" "),s("p",[e._v("Bond the GEEK of the Stash account. These GEEK will be put at stake for the security of the network and can be slashed.\nSelect the Controller. This is the account that will decide when to start or stop validating.")]),e._v(" "),s("p",[e._v("First, go to the Staking section. Click on "),s("a",{attrs:{href:"https://app.geek.gl/#/staking/actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("Account Actions"),s("OutboundLink")],1),e._v(", and then the "),s("strong",[e._v("Validator")]),e._v(" button.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(380),alt:"How to run a Validator on GEEK",title:"How to run a Validator on GEEK"}})]),e._v(" "),s("p",[s("strong",[e._v("Stash account:")]),e._v(" - Select your Stash account. In this example, we will bond 1M GEEK, make sure that your Stash account contains at least this much. You can, of course, stake more than this.")]),e._v(" "),s("p",[s("strong",[e._v("Controller account:")]),e._v(" - Select the Controller account created earlier. This account will also need a small amount of GEEK in order to start and stop validating.")]),e._v(" "),s("p",[s("strong",[e._v("Value bonded:")]),e._v(" - How much GEEK from the Stash account you want to bond/stake. Note that you do not need to bond all of the GEEK in that account. Also note that you can always bond more GEEK later. However, withdrawing any bonded amount requires the duration of the unbonding period. On GEEK, the planned unbonding period is 2 days.")]),e._v(" "),s("p",[s("strong",[e._v("Payment destination:")]),e._v(" - The account where the rewards from validating are sent. If you'd like to redirect payments to an account that is neither the controller nor the stash account, set one up. Note that it is extremely unsafe to set an exchange address as the recipient of the staking rewards.")]),e._v(" "),s("h3",{attrs:{id:"generating-the-session-keys"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generating-the-session-keys"}},[e._v("#")]),e._v(" Generating the Session Keys")]),e._v(" "),s("p",[e._v("Once your node is fully synced, stop the process by pressing Ctrl-C. At your terminal prompt, it is easier to run this command")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('curl -H "Content-Type: application/json" -d \'{"id":1, "jsonrpc":"2.0", "method": "author_rotateKeys", "params":[]}\' http://localhost:9933\n')])])]),s("p",[s("img",{attrs:{src:a(381),alt:"How to run a Validator on GEEK",title:"How to run a Validator on GEEK"}})]),e._v(" "),s("p",[e._v('The output will have a hex-encoded "result" field. The result is the concatenation of the four public keys. Save this result for a later step.')]),e._v(" "),s("h3",{attrs:{id:"submitting-the-setkeys-transaction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#submitting-the-setkeys-transaction"}},[e._v("#")]),e._v(" Submitting the setKeys Transaction")]),e._v(" "),s("p",[s("img",{attrs:{src:a(382),alt:"How to run a Validator on GEEK",title:"How to run a Validator on GEEK"}})]),e._v(" "),s("p",[s("strong",[e._v("Reward commission:")]),e._v(" You can specify the percentage of the rewards that will get paid to you. The remaining will be split among your nominators.")]),e._v(" "),s("p",[e._v("Click "),s("strong",[e._v('"Bond & Validate"')]),e._v(".")]),e._v(" "),s("p",[e._v("The validator set is refreshed every era. In the next era, if there is a slot available and your node is selected to join the validator set, your node will become an active validator. Until then, it will remain in the waiting queue. If your validator is not selected to become part of the validator set, it will remain in the waiting queue until it is. There is no need to re-start if you are not selected for the validator set in a particular era. However, it may be necessary to increase the number of GEEK staked or seek out nominators for your validator in order to join the validator set.")]),e._v(" "),s("p",[s("strong",[e._v("Congratulations!")]),e._v(" If you have followed all of these steps, and been selected to be a part of the validator set, you are now running a GEEK Validator! If you need help, reach out on the "),s("a",{attrs:{href:"https://discord.gg/4fDKzQw",target:"_blank",rel:"noopener noreferrer"}},[e._v("GEEK Validator chat"),s("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);t.default=o.exports}}]);